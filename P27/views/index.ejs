<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Employee Management</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 20px;
      background-color: #f4f4f4;
      color: #333;
    }
    h1, h2 {
      text-align: center;
    }
    form {
      max-width: 600px;
      margin: 0 auto 20px;
      padding: 20px;
      background: #fff;
      border: 1px solid #ccc;
      border-radius: 5px;
    }
    form div {
      margin-bottom: 15px;
    }
    form label {
      display: block;
      font-weight: bold;
      margin-bottom: 5px;
    }
    form input[type="text"],
    form textarea,
    form select {
      width: 100%;
      padding: 8px;
      box-sizing: border-box;
    }
    form input[type="radio"],
    form input[type="checkbox"] {
      margin-right: 5px;
    }
    table {
      width: 100%;
      max-width: 800px;
      margin: 0 auto;
      border-collapse: collapse;
      background: #fff;
    }
    table, th, td {
      border: 1px solid #ccc;
    }
    th, td {
      padding: 10px;
      text-align: left;
    }
    button {
      padding: 8px 12px;
      border: none;
      background: #333;
      color: #fff;
      cursor: pointer;
    }
    button:hover {
      background: #555;
    }
  </style>
</head>
<body>
  <h1>Employee Management</h1>
  <form id="employeeForm">
    <input type="hidden" id="employeeId" value="">
    
    <div>
      <label for="name">Name:</label>
      <input type="text" id="name" placeholder="Enter name" required>
    </div>
    
    <div>
      <label for="address">Address:</label>
      <textarea id="address" placeholder="Enter address" required></textarea>
    </div>
    
    <div>
      <label for="city">City:</label>
      <select id="city" required>
        <option value="">Select City</option>
        <option value="Delhi">Delhi</option>
        <option value="Mumbai">Mumbai</option>
        <option value="Neemerana">Neemerana</option>
      </select>
    </div>
    
    <div>
      <label>Gender:</label>
      <input type="radio" name="gender" value="Male" required> Male
      <input type="radio" name="gender" value="Female" required> Female
    </div>
    
    <div>
      <label>Vehicles:</label>
      <input type="checkbox" name="vehicles" value="Car"> Car
      <input type="checkbox" name="vehicles" value="Bike"> Bike
    </div>
    
    <div>
      <label for="photo">Photo:</label>
      <input type="file" id="photo">
    </div>
    
    <div>
      <button type="submit">Submit</button>
    </div>
  </form>

  <h2>Employees List</h2>
  <table id="employeesTable">
    <thead>
      <tr>
        <th>Name</th>
        <th>Address</th>
        <th>City</th>
        <th>Gender</th>
        <th>Vehicles</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody>
    </tbody>
  </table>

  <script>
    const apiUrl = 'http://localhost:3000/employees';

    async function fetchEmployees() {
      try {
        const response = await fetch(apiUrl);
        const employees = await response.json();
        const tbody = document.querySelector('#employeesTable tbody');
        tbody.innerHTML = '';
        employees.forEach(employee => {
          const tr = document.createElement('tr');
          tr.innerHTML = `
            <td>${employee.name}</td>
            <td>${employee.address}</td>
            <td>${employee.city}</td>
            <td>${employee.gender}</td>
            <td>${employee.vehicles.join(', ')}</td>
            <td>
              <button onclick="editEmployee('${employee._id}')">Edit</button>
              <button onclick="deleteEmployee('${employee._id}')">Delete</button>
            </td>
          `;
          tbody.appendChild(tr);
        });
      } catch (err) {
        console.error('Error fetching employees:', err);
      }
    }

    document.getElementById('employeeForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      const employeeId = document.getElementById('employeeId').value;
      const name = document.getElementById('name').value;
      const address = document.getElementById('address').value;
      const city = document.getElementById('city').value;
      const gender = document.querySelector('input[name="gender"]:checked') ? document.querySelector('input[name="gender"]:checked').value : '';
      const vehicles = Array.from(document.querySelectorAll('input[name="vehicles"]:checked')).map(el => el.value);

      const employeeData = { name, address, city, gender, vehicles };

      try {
        if (employeeId) {
          const response = await fetch(`${apiUrl}/${employeeId}`, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(employeeData)
          });
          if (!response.ok) throw new Error('Error updating employee');
          alert('Employee updated successfully');
        } else {
          const response = await fetch(apiUrl, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(employeeData)
          });
          if (!response.ok) throw new Error('Error creating employee');
          alert('Employee created successfully');
        }
      } catch (err) {
        alert(err.message);
      }

      document.getElementById('employeeForm').reset();
      document.getElementById('employeeId').value = '';
      fetchEmployees();
    });

    async function editEmployee(id) {
      try {
        const response = await fetch(apiUrl);
        const employees = await response.json();
        const employee = employees.find(emp => emp._id === id);
        if (employee) {
          document.getElementById('employeeId').value = employee._id;
          document.getElementById('name').value = employee.name;
          document.getElementById('address').value = employee.address;
          document.getElementById('city').value = employee.city;
          document.querySelectorAll('input[name="gender"]').forEach(el => {
            el.checked = el.value === employee.gender;
          });
          document.querySelectorAll('input[name="vehicles"]').forEach(el => {
            el.checked = employee.vehicles.includes(el.value);
          });
        }
      } catch (err) {
        console.error('Error editing employee:', err);
      }
    }

    async function deleteEmployee(id) {
      if (confirm('Are you sure you want to delete this employee?')) {
        try {
          const response = await fetch(`${apiUrl}/${id}`, { method: 'DELETE' });
          if (!response.ok) throw new Error('Error deleting employee');
          alert('Employee deleted successfully');
          fetchEmployees();
        } catch (err) {
          alert(err.message);
        }
      }
    }

    fetchEmployees();
  </script>
</body>
</html>
